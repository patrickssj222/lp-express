{
   readableState:
    ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null },
   readable: false,
   domain: null,
   _events: {},
   _eventsCount: 0,
   _maxListeners: undefined,
   socket:
    Socket {
      connecting: false,
      _hadError: false,
      _handle:
       TCP {
         reading: true,
         owner: [Circular],
         onread: [Function: onread],
         onconnection: null,
         writeQueueSize: 0,
         _consumed: true },
      _parent: null,
      _host: null,
      _readableState:
       ReadableState {
         objectMode: false,
         highWaterMark: 16384,
         buffer: [BufferList],
         length: 0,
         pipes: null,
         pipesCount: 0,
         flowing: true,
         ended: false,
         endEmitted: false,
         reading: true,
         sync: false,
         needReadable: true,
         emittedReadable: false,
         readableListening: false,
         resumeScheduled: false,
         destroyed: false,
         defaultEncoding: 'utf8',
         awaitDrain: 0,
         readingMore: false,
         decoder: null,
         encoding: null },
      readable: true,
      domain: null,
      _events:
       { end: [Array],
         finish: [Function: onSocketFinish],
         _socketEnd: [Function: onSocketEnd],
         drain: [Array],
         timeout: [Function: socketOnTimeout],
         data: [Function: bound socketOnData],
         error: [Array],
         close: [Array],
         resume: [Function: onSocketResume],
         pause: [Function: onSocketPause] },
      _eventsCount: 10,
      _maxListeners: undefined,
      _writableState:
       WritableState {
         objectMode: false,
         highWaterMark: 16384,
         finalCalled: false,
         needDrain: false,
         ending: false,
         ended: false,
         finished: false,
         destroyed: false,
         decodeStrings: false,
         defaultEncoding: 'utf8',
         length: 0,
         writing: false,
         corked: 0,
         sync: true,
         bufferProcessing: false,
         onwrite: [Function: bound onwrite],
         writecb: null,
         writelen: 0,
         bufferedRequest: null,
         lastBufferedRequest: null,
         pendingcb: 0,
         prefinished: false,
         errorEmitted: false,
         bufferedRequestCount: 0,
         corkedRequestsFree: [Object] },
      writable: true,
      allowHalfOpen: true,
      _bytesDispatched: 0,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server:
       Server {
         domain: null,
         _events: [Object],
         _eventsCount: 4,
         _maxListeners: undefined,
         _connections: 1,
         _handle: [TCP],
         _usingWorkers: false,
         _workers: [],
         _unref: false,
         allowHalfOpen: true,
         pauseOnConnect: false,
         httpAllowHalfOpen: false,
         timeout: 120000,
         keepAliveTimeout: 5000,
         _pendingResponseData: 0,
         maxHeadersCount: null,
         _connectionKey: '6::::3000',
         [Symbol(asyncId)]: 7 },
      _server:
       Server {
         domain: null,
         _events: [Object],
         _eventsCount: 4,
         _maxListeners: undefined,
         _connections: 1,
         _handle: [TCP],
         _usingWorkers: false,
         _workers: [],
         _unref: false,
         allowHalfOpen: true,
         pauseOnConnect: false,
         httpAllowHalfOpen: false,
         timeout: 120000,
         keepAliveTimeout: 5000,
         _pendingResponseData: 0,
         maxHeadersCount: null,
         _connectionKey: '6::::3000',
         [Symbol(asyncId)]: 7 },
      _idleTimeout: 120000,
      _idleNext:
       TimersList {
         _idleNext: [Circular],
         _idlePrev: [Circular],
         _unrefed: true,
         msecs: 120000,
         nextTick: false,
         _timer: [Timer] },
      _idlePrev:
       TimersList {
         _idleNext: [Circular],
         _idlePrev: [Circular],
         _unrefed: true,
         msecs: 120000,
         nextTick: false,
         _timer: [Timer] },
      _idleStart: 16351,
      _destroyed: false,
      parser:
       HTTPParser {
         '0': [Function: parserOnHeaders],
         '1': [Function: parserOnHeadersComplete],
         '2': [Function: parserOnBody],
         '3': [Function: parserOnMessageComplete],
         '4': [Function: bound onParserExecute],
         _headers: [],
         _url: '',
         _consumed: true,
         socket: [Circular],
         incoming: [Circular],
         outgoing: null,
         maxHeaderPairs: 2000,
         onIncoming: [Function: bound parserOnIncoming] },
      on: [Function: socketOnWrap],
      _paused: false,
      read: [Function],
      _consuming: true,
      _httpMessage:
       ServerResponse {
         domain: null,
         _events: [Object],
         _eventsCount: 2,
         _maxListeners: undefined,
         output: [],
         outputEncodings: [],
         outputCallbacks: [],
         outputSize: 0,
         writable: true,
         _last: false,
         upgrading: false,
         chunkedEncoding: false,
         shouldKeepAlive: false,
         useChunkedEncodingByDefault: true,
         sendDate: true,
         _removedConnection: false,
         _removedContLen: false,
         _removedTE: false,
         _contentLength: null,
         _hasBody: true,
         _trailer: '',
         finished: false,
         _headerSent: false,
         socket: [Circular],
         connection: [Circular],
         _header: null,
         _onPendingData: [Function: bound updateOutgoingData],
         _sent100: false,
         _expect_continue: false,
         req: [Circular],
         locals: [Object],
         _startAt: undefined,
         _startTime: undefined,
         writeHead: [Function: writeHead],
         __onFinished: [Function],
         [Symbol(outHeadersKey)]: [Object] },
      _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 54606 },
      [Symbol(asyncId)]: 172,
      [Symbol(bytesRead)]: 0,
      [Symbol(asyncId)]: 173,
      [Symbol(triggerAsyncId)]: 7 },
   connection:
    Socket {
      connecting: false,
      _hadError: false,
      _handle:
       TCP {
         reading: true,
         owner: [Circular],
         onread: [Function: onread],
         onconnection: null,
         writeQueueSize: 0,
         _consumed: true },
      _parent: null,
      _host: null,
      _readableState:
       ReadableState {
         objectMode: false,
         highWaterMark: 16384,
         buffer: [BufferList],
         length: 0,
         pipes: null,
         pipesCount: 0,
         flowing: true,
         ended: false,
         endEmitted: false,
         reading: true,
         sync: false,
         needReadable: true,
         emittedReadable: false,
         readableListening: false,
         resumeScheduled: false,
         destroyed: false,
         defaultEncoding: 'utf8',
         awaitDrain: 0,
         readingMore: false,
         decoder: null,
         encoding: null },
      readable: true,
      domain: null,
      _events:
       { end: [Array],
         finish: [Function: onSocketFinish],
         _socketEnd: [Function: onSocketEnd],
         drain: [Array],
         timeout: [Function: socketOnTimeout],
         data: [Function: bound socketOnData],
         error: [Array],
         close: [Array],
         resume: [Function: onSocketResume],
         pause: [Function: onSocketPause] },
      _eventsCount: 10,
      _maxListeners: undefined,
      _writableState:
       WritableState {
         objectMode: false,
         highWaterMark: 16384,
         finalCalled: false,
         needDrain: false,
         ending: false,
         ended: false,
         finished: false,
         destroyed: false,
         decodeStrings: false,
         defaultEncoding: 'utf8',
         length: 0,
         writing: false,
         corked: 0,
         sync: true,
         bufferProcessing: false,
         onwrite: [Function: bound onwrite],
         writecb: null,
         writelen: 0,
         bufferedRequest: null,
         lastBufferedRequest: null,
         pendingcb: 0,
         prefinished: false,
         errorEmitted: false,
         bufferedRequestCount: 0,
         corkedRequestsFree: [Object] },
      writable: true,
      allowHalfOpen: true,
      _bytesDispatched: 0,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server:
       Server {
         domain: null,
         _events: [Object],
         _eventsCount: 4,
         _maxListeners: undefined,
         _connections: 1,
         _handle: [TCP],
         _usingWorkers: false,
         _workers: [],
         _unref: false,
         allowHalfOpen: true,
         pauseOnConnect: false,
         httpAllowHalfOpen: false,
         timeout: 120000,
         keepAliveTimeout: 5000,
         _pendingResponseData: 0,
         maxHeadersCount: null,
         _connectionKey: '6::::3000',
         [Symbol(asyncId)]: 7 },
      _server:
       Server {
         domain: null,
         _events: [Object],
         _eventsCount: 4,
         _maxListeners: undefined,
         _connections: 1,
         _handle: [TCP],
         _usingWorkers: false,
         _workers: [],
         _unref: false,
         allowHalfOpen: true,
         pauseOnConnect: false,
         httpAllowHalfOpen: false,
         timeout: 120000,
         keepAliveTimeout: 5000,
         _pendingResponseData: 0,
         maxHeadersCount: null,
         _connectionKey: '6::::3000',
         [Symbol(asyncId)]: 7 },
      _idleTimeout: 120000,
      _idleNext:
       TimersList {
         _idleNext: [Circular],
         _idlePrev: [Circular],
         _unrefed: true,
         msecs: 120000,
         nextTick: false,
         _timer: [Timer] },
      _idlePrev:
       TimersList {
         _idleNext: [Circular],
         _idlePrev: [Circular],
         _unrefed: true,
         msecs: 120000,
         nextTick: false,
         _timer: [Timer] },
      _idleStart: 16351,
      _destroyed: false,
      parser:
       HTTPParser {
         '0': [Function: parserOnHeaders],
         '1': [Function: parserOnHeadersComplete],
         '2': [Function: parserOnBody],
         '3': [Function: parserOnMessageComplete],
         '4': [Function: bound onParserExecute],
         _headers: [],
         _url: '',
         _consumed: true,
         socket: [Circular],
         incoming: [Circular],
         outgoing: null,
         maxHeaderPairs: 2000,
         onIncoming: [Function: bound parserOnIncoming] },
      on: [Function: socketOnWrap],
      _paused: false,
      read: [Function],
      _consuming: true,
      _httpMessage:
       ServerResponse {
         domain: null,
         _events: [Object],
         _eventsCount: 2,
         _maxListeners: undefined,
         output: [],
         outputEncodings: [],
         outputCallbacks: [],
         outputSize: 0,
         writable: true,
         _last: false,
         upgrading: false,
         chunkedEncoding: false,
         shouldKeepAlive: false,
         useChunkedEncodingByDefault: true,
         sendDate: true,
         _removedConnection: false,
         _removedContLen: false,
         _removedTE: false,
         _contentLength: null,
         _hasBody: true,
         _trailer: '',
         finished: false,
         _headerSent: false,
         socket: [Circular],
         connection: [Circular],
         _header: null,
         _onPendingData: [Function: bound updateOutgoingData],
         _sent100: false,
         _expect_continue: false,
         req: [Circular],
         locals: [Object],
         _startAt: undefined,
         _startTime: undefined,
         writeHead: [Function: writeHead],
         __onFinished: [Function],
         [Symbol(outHeadersKey)]: [Object] },
      _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 54606 },
      [Symbol(asyncId)]: 172,
      [Symbol(bytesRead)]: 0,
      [Symbol(asyncId)]: 173,
      [Symbol(triggerAsyncId)]: 7 },
   httpVersionMajor: 1,
   httpVersionMinor: 1,
   httpVersion: '1.1',
   complete: true,
   headers:
    { 'x-forwarded-host': 'localhost:3001',
      'x-forwarded-proto': 'http',
      'x-forwarded-port': '3001',
      'x-forwarded-for': '127.0.0.1',
      'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh-TW;q=0.7,zh;q=0.6',
      'accept-encoding': 'gzip, deflate, br',
      referer: 'http://localhost:3001/customer/detail/print',
      'content-type': 'application/json;charset=UTF-8',
      'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36',
      origin: 'http://localhost:3000',
      accept: 'application/json, text/plain, */*',
      'content-length': '1287',
      connection: 'close',
      host: 'localhost:3000' },
   rawHeaders:
    [ 'x-forwarded-host',
      'localhost:3001',
      'x-forwarded-proto',
      'http',
      'x-forwarded-port',
      '3001',
      'x-forwarded-for',
      '127.0.0.1',
      'accept-language',
      'en-US,en;q=0.9,zh-CN;q=0.8,zh-TW;q=0.7,zh;q=0.6',
      'accept-encoding',
      'gzip, deflate, br',
      'referer',
      'http://localhost:3001/customer/detail/print',
      'content-type',
      'application/json;charset=UTF-8',
      'user-agent',
      'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36',
      'origin',
      'http://localhost:3000',
      'accept',
      'application/json, text/plain, */*',
      'content-length',
      '1287',
      'connection',
      'close',
      'host',
      'localhost:3000' ],
   trailers: {},
   rawTrailers: [],
   upgrade: false,
   url: '/create-pdf',
   method: 'POST',
   statusCode: null,
   statusMessage: null,
   client:
    Socket {
      connecting: false,
      _hadError: false,
      _handle:
       TCP {
         reading: true,
         owner: [Circular],
         onread: [Function: onread],
         onconnection: null,
         writeQueueSize: 0,
         _consumed: true },
      _parent: null,
      _host: null,
      _readableState:
       ReadableState {
         objectMode: false,
         highWaterMark: 16384,
         buffer: [BufferList],
         length: 0,
         pipes: null,
         pipesCount: 0,
         flowing: true,
         ended: false,
         endEmitted: false,
         reading: true,
         sync: false,
         needReadable: true,
         emittedReadable: false,
         readableListening: false,
         resumeScheduled: false,
         destroyed: false,
         defaultEncoding: 'utf8',
         awaitDrain: 0,
         readingMore: false,
         decoder: null,
         encoding: null },
      readable: true,
      domain: null,
      _events:
       { end: [Array],
         finish: [Function: onSocketFinish],
         _socketEnd: [Function: onSocketEnd],
         drain: [Array],
         timeout: [Function: socketOnTimeout],
         data: [Function: bound socketOnData],
         error: [Array],
         close: [Array],
         resume: [Function: onSocketResume],
         pause: [Function: onSocketPause] },
      _eventsCount: 10,
      _maxListeners: undefined,
      _writableState:
       WritableState {
         objectMode: false,
         highWaterMark: 16384,
         finalCalled: false,
         needDrain: false,
         ending: false,
         ended: false,
         finished: false,
         destroyed: false,
         decodeStrings: false,
         defaultEncoding: 'utf8',
         length: 0,
         writing: false,
         corked: 0,
         sync: true,
         bufferProcessing: false,
         onwrite: [Function: bound onwrite],
         writecb: null,
         writelen: 0,
         bufferedRequest: null,
         lastBufferedRequest: null,
         pendingcb: 0,
         prefinished: false,
         errorEmitted: false,
         bufferedRequestCount: 0,
         corkedRequestsFree: [Object] },
      writable: true,
      allowHalfOpen: true,
      _bytesDispatched: 0,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server:
       Server {
         domain: null,
         _events: [Object],
         _eventsCount: 4,
         _maxListeners: undefined,
         _connections: 1,
         _handle: [TCP],
         _usingWorkers: false,
         _workers: [],
         _unref: false,
         allowHalfOpen: true,
         pauseOnConnect: false,
         httpAllowHalfOpen: false,
         timeout: 120000,
         keepAliveTimeout: 5000,
         _pendingResponseData: 0,
         maxHeadersCount: null,
         _connectionKey: '6::::3000',
         [Symbol(asyncId)]: 7 },
      _server:
       Server {
         domain: null,
         _events: [Object],
         _eventsCount: 4,
         _maxListeners: undefined,
         _connections: 1,
         _handle: [TCP],
         _usingWorkers: false,
         _workers: [],
         _unref: false,
         allowHalfOpen: true,
         pauseOnConnect: false,
         httpAllowHalfOpen: false,
         timeout: 120000,
         keepAliveTimeout: 5000,
         _pendingResponseData: 0,
         maxHeadersCount: null,
         _connectionKey: '6::::3000',
         [Symbol(asyncId)]: 7 },
      _idleTimeout: 120000,
      _idleNext:
       TimersList {
         _idleNext: [Circular],
         _idlePrev: [Circular],
         _unrefed: true,
         msecs: 120000,
         nextTick: false,
         _timer: [Timer] },
      _idlePrev:
       TimersList {
         _idleNext: [Circular],
         _idlePrev: [Circular],
         _unrefed: true,
         msecs: 120000,
         nextTick: false,
         _timer: [Timer] },
      _idleStart: 16351,
      _destroyed: false,
      parser:
       HTTPParser {
         '0': [Function: parserOnHeaders],
         '1': [Function: parserOnHeadersComplete],
         '2': [Function: parserOnBody],
         '3': [Function: parserOnMessageComplete],
         '4': [Function: bound onParserExecute],
         _headers: [],
         _url: '',
         _consumed: true,
         socket: [Circular],
         incoming: [Circular],
         outgoing: null,
         maxHeaderPairs: 2000,
         onIncoming: [Function: bound parserOnIncoming] },
      on: [Function: socketOnWrap],
      _paused: false,
      read: [Function],
      _consuming: true,
      _httpMessage:
       ServerResponse {
         domain: null,
         _events: [Object],
         _eventsCount: 2,
         _maxListeners: undefined,
         output: [],
         outputEncodings: [],
         outputCallbacks: [],
         outputSize: 0,
         writable: true,
         _last: false,
         upgrading: false,
         chunkedEncoding: false,
         shouldKeepAlive: false,
         useChunkedEncodingByDefault: true,
         sendDate: true,
         _removedConnection: false,
         _removedContLen: false,
         _removedTE: false,
         _contentLength: null,
         _hasBody: true,
         _trailer: '',
         finished: false,
         _headerSent: false,
         socket: [Circular],
         connection: [Circular],
         _header: null,
         _onPendingData: [Function: bound updateOutgoingData],
         _sent100: false,
         _expect_continue: false,
         req: [Circular],
         locals: [Object],
         _startAt: undefined,
         _startTime: undefined,
         writeHead: [Function: writeHead],
         __onFinished: [Function],
         [Symbol(outHeadersKey)]: [Object] },
      _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 54606 },
      [Symbol(asyncId)]: 172,
      [Symbol(bytesRead)]: 0,
      [Symbol(asyncId)]: 173,
      [Symbol(triggerAsyncId)]: 7 },
   _consuming: true,
   _dumped: false,
   next: [Function: next],
   baseUrl: '',
   originalUrl: '/create-pdf',
   _parsedUrl:
    Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/create-pdf',
      path: '/create-pdf',
      href: '/create-pdf',
      _raw: '/create-pdf' },
   params: {},
   query: {},
   res:
    ServerResponse {
      domain: null,
      _events: { finish: [Array], end: [Function: onevent] },
      _eventsCount: 2,
      _maxListeners: undefined,
      output: [],
      outputEncodings: [],
      outputCallbacks: [],
      outputSize: 0,
      writable: true,
      _last: false,
      upgrading: false,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket:
       Socket {
         connecting: false,
         _hadError: false,
         _handle: [TCP],
         _parent: null,
         _host: null,
         _readableState: [ReadableState],
         readable: true,
         domain: null,
         _events: [Object],
         _eventsCount: 10,
         _maxListeners: undefined,
         _writableState: [WritableState],
         writable: true,
         allowHalfOpen: true,
         _bytesDispatched: 0,
         _sockname: null,
         _pendingData: null,
         _pendingEncoding: '',
         server: [Server],
         _server: [Server],
         _idleTimeout: 120000,
         _idleNext: [TimersList],
         _idlePrev: [TimersList],
         _idleStart: 16351,
         _destroyed: false,
         parser: [HTTPParser],
         on: [Function: socketOnWrap],
         _paused: false,
         read: [Function],
         _consuming: true,
         _httpMessage: [Circular],
         _peername: [Object],
         [Symbol(asyncId)]: 172,
         [Symbol(bytesRead)]: 0,
         [Symbol(asyncId)]: 173,
         [Symbol(triggerAsyncId)]: 7 },
      connection:
       Socket {
         connecting: false,
         _hadError: false,
         _handle: [TCP],
         _parent: null,
         _host: null,
         _readableState: [ReadableState],
         readable: true,
         domain: null,
         _events: [Object],
         _eventsCount: 10,
         _maxListeners: undefined,
         _writableState: [WritableState],
         writable: true,
         allowHalfOpen: true,
         _bytesDispatched: 0,
         _sockname: null,
         _pendingData: null,
         _pendingEncoding: '',
         server: [Server],
         _server: [Server],
         _idleTimeout: 120000,
         _idleNext: [TimersList],
         _idlePrev: [TimersList],
         _idleStart: 16351,
         _destroyed: false,
         parser: [HTTPParser],
         on: [Function: socketOnWrap],
         _paused: false,
         read: [Function],
         _consuming: true,
         _httpMessage: [Circular],
         _peername: [Object],
         [Symbol(asyncId)]: 172,
         [Symbol(bytesRead)]: 0,
         [Symbol(asyncId)]: 173,
         [Symbol(triggerAsyncId)]: 7 },
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: { pool: [Pool] },
      _startAt: undefined,
      _startTime: undefined,
      writeHead: [Function: writeHead],
      __onFinished: { [Function: listener] queue: [Array] },
      [Symbol(outHeadersKey)]:
       { 'x-powered-by': [Array],
         'access-control-allow-origin': [Array] } },
   _startAt: [ 21360, 878040677 ],
   _startTime: 2019-07-22T20:56:23.608Z,
   _remoteAddress: '::ffff:127.0.0.1',
   body:
    { detail:
       { id: 84,
         name: '李啸涵',
         phone: '+1 (647) 284-7465',
         dob: '1998-06-30',
         gender: '女',
         email: 'reborn980630@gmail.com',
         citizenship: '中国',
         identification_number: '210-282-1998-0630-0025',
         uci_number: '94616816',
         passport_number: 'E29029896',
         passport_due: '2024-09-01',
         visa_type: '加拿大学签',
         visa_due: '2019-09-30',
         first_landing_date: '2016-09-27',
         first_landing_location: 'Toronto',
         used_name: '无',
         creation_time: '2019-07-04T00:33:34.000Z',
         city_id: 534,
         update_time: '2019-07-03 20:20:00',
         birth_city_id: 534,
         canada_address: '2401-7 Grenville st',
         postal_code: 'M4Y 1W9',
         user_name: 'Patrick',
         created_by: 12 },
      business: [ [Object] ],
      china_geo: { city: '大连', province: '辽宁省', region: '东北地区' },
      birth_geo: { city: '大连', province: '辽宁省', region: '东北地区' } },
   _body: true,
   length: undefined,
   read: [Function],
   secret: undefined,
   cookies: {},
   signedCookies: {},
   route:
    Route {
      path: '/create-pdf',
      stack: [ [Layer] ],
      methods: { post: true } } }
